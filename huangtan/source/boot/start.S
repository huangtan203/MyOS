/**
从磁盘上加载文件到0x8000处
 */
	#include "boot.h"

  	// 16位代码，务必加上
  	.code16
 	.text
	.global _start
_start:
// 设置数据段寄存器初始化寄存器
	mov $0,%ax
	mov %ax,%ds
	mov %ax,%es
	mov %ax,%fs
	mov %ax,%gs
	mov %ax,%ss

	mov $_start,%esp
	//提示boot加载完毕
	mov $0xe,%ah
	mov $'L',%al
	//触发软件中断输出屏幕
	int $0x10
//加载loader
read_loader:
	mov $0x8000,%bx //读取到的内存地址
	mov $0x2,%cx //ch：磁道号
	mov $0x2,%ah //ah:0x2读磁盘命令
	mov $64,%al //al:读取的扇区数量
	mov $0x0080,%dx //dx：dh磁头号,d1驱动号0x80
	int $0x13
	jc read_loader
	jmp boot_entry
	jmp .
	/*磁道号和驱动器号用于确定要从哪个磁盘读取数据。在x86体系结构中，通过磁头号、磁道号和驱动器号来表示磁盘的位置信息。具体如下：
	磁头号（Head Number）：它表示磁盘的磁头位置，范围是0-255。一般来说，这个值设置为0即可，表示使用磁盘的第一个磁头。
	磁道号（Cylinder Number）：它表示磁头所在的磁道位置，范围是0-1023。每个磁头都有若干个磁道，用磁道号表示需要读取或写入的磁道。
	驱动器号（Drive Number）：用来表示使用哪个驱动器，一般使用十六进制数表示。例如，驱动器号为0x80表示使用第一个硬盘。
	在给定的代码中，磁道号为2，驱动器号为0x80（128）。这表示要从第一个硬盘（驱动器号为0x80）的第2个磁道读取数据。
	AH：操作类型参数，用于指定需要执行的具体磁盘操作，例如读取数据或写入数据。
	AL：扇区数参数，用于指定需要操作的扇区数量。
	CH：磁道号参数，用于指定操作所在的磁道号。
	CL：扇区号参数，用于指定操作所在的扇区号。
	DH：磁头号参数，用于指定操作所在的磁头号。
	DL：驱动器号参数，用于指定需要进行磁盘操作的驱动器号。*/
	// 引导结束段
	.section boot_end, "ax"
boot_sig: .byte 0x55, 0xaa
